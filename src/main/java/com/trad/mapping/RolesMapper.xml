<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trad.dao.RolesMapper" >
  <resultMap id="BaseResultMap" type="com.trad.bean.Roles" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
    <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
    <result column="record_status" property="recordStatus" jdbcType="VARCHAR" />
    <collection property="userRoles" ofType="com.trad.bean.UserRoles">  
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
	    <result column="user_id" property="userId" jdbcType="INTEGER" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
        <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
        <association property="user" javaType="com.trad.bean.User">  
            <id column="user_id" property="userId" jdbcType="INTEGER" />
			    <result column="user_name" property="userName" jdbcType="VARCHAR" />
			    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
			    <result column="real_name" property="realName" jdbcType="VARCHAR" />
			    <result column="email" property="email" jdbcType="VARCHAR" />
			    <result column="phone" property="phone" jdbcType="VARCHAR" />
			    <result column="sex" property="sex" jdbcType="CHAR" />
			    <result column="live_address" property="liveAddress" jdbcType="VARCHAR" />
			    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
               <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
        </association> 
       </collection>
    <collection property="rolePers" ofType="com.trad.bean.RolePermission">  
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
	    <result column="tree_id" property="treeId" jdbcType="INTEGER" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
        <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
	    <association property="tree" javaType="com.trad.bean.Tree">  
	           <id column="tree_id" property="treeId" jdbcType="INTEGER" />
			    <result column="tree_name" property="treeName" jdbcType="VARCHAR" />
			    <result column="tree_desc" property="treeDesc" jdbcType="VARCHAR" />
			    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
			    <result column="url" property="url" jdbcType="VARCHAR" />
			    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
			    <result column="ordernum" property="ordernum" jdbcType="VARCHAR" />
			    <result column="icon" property="icon" jdbcType="VARCHAR" />
			    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
                <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
	    </association>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_desc, create_time, update_time,create_per,update_per,record_status
  </sql>
  <select id="queryRoleById" resultMap="BaseResultMap" parameterType="java.lang.String" >
	   select ro.*,per.*,tree.*    
	   from t_roles ro join t_role_permission per ON ro.role_id = per.role_id 
	   JOIN t_tree tree ON tree.tree_id = per.tree_id  WHERE ro.record_status='1' and tree.record_status='1' and
	   ro.role_id in ( #{roleIds,jdbcType=VARCHAR}) order by tree.ordernum asc
  </select>
  
  <select id="getUserTree" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	   SELECT ro.*,ur.*,u.* FROM t_roles ro JOIN t_user_roles ur ON ro.role_id = ur.role_id 
      JOIN t_user u ON u.user_id = ur.user_id  WHERE ro.record_status='1' and u.record_status='1'
      and  ro.role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
   <select id="queryByPaged" resultMap="BaseResultMap" parameterType="java.lang.Integer" > 
    select  
    <include refid="Base_Column_List" />
     from t_roles
     <if test="filter != null and filter != ''" >
        where role_name like #{filter,jdbcType=VARCHAR}
      </if>
     LIMIT #{1} , #{2}
  </select>
  
  <select id="queryAll" resultMap="BaseResultMap">
     SELECT ro.*,ur.*,u.*,per.*,tree.* FROM t_roles ro LEFT JOIN t_user_roles ur ON ro.role_id = ur.role_id 
     LEFT  JOIN t_user u ON u.user_id = ur.user_id LEFT  join t_role_permission per ON ro.role_id = per.role_id 
	 LEFT JOIN t_tree tree ON tree.tree_id = per.tree_id 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_roles
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <select id="count" resultType="java.lang.Integer">
    select count(1) cnt  from t_roles
    <if test="filter != null and filter != ''" >
        where role_name like #{filter,jdbcType=VARCHAR}
      </if>
  </select>
  <!-- keyProperty 必须为实体bean对应的ID -->
  <insert id="insert" parameterType="com.trad.bean.Roles"  useGeneratedKeys="true" keyProperty="roleId">
    insert into t_roles (role_id, role_name, role_desc,create_time, update_time,create_per,update_per,record_status)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},#{createPer,jdbcType=VARCHAR},#{updatePer,jdbcType=VARCHAR},#{recordStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trad.bean.Roles"  useGeneratedKeys="true" keyProperty="roleId">
    insert into t_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createPer != null" >
        create_per,
      </if>
      <if test="updatePer != null" >
        update_per,
      </if>
      <if test="recordStatus != null" >
        record_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPer != null" >
        #{createPer,jdbcType=VARCHAR},
      </if>
      <if test="updatePer != null" >
        #{updatePer,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        #{recordStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trad.bean.Roles" >
    update t_roles
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPer != null" >
        create_per = #{createPer,jdbcType=VARCHAR},
      </if>
      <if test="updatePer != null" >
        update_per = #{updatePer,jdbcType=VARCHAR},
      </if>
      <if test="recordStatus != null" >
        record_status = #{recordStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trad.bean.Roles" >
    update t_roles
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_per = #{createPer,jdbcType=VARCHAR},
	  update_per = #{updatePer,jdbcType=VARCHAR},
	  record_status = #{recordStatus,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>