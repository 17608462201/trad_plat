<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trad.dao.PaymentBadMapper" >
  <resultMap id="BaseResultMap" type="com.trad.bean.PaymentBad" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
    <result column="loan_id" property="loanId" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="bad_debt_status" property="badDebtStatus" jdbcType="CHAR" />
    <result column="is_settle" property="isSettle" jdbcType="CHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="handler" property="handler" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_per" property="createPer" jdbcType="VARCHAR" />
    <result column="update_per" property="updatePer" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, payment_id, loan_id, pay_time, bad_debt_status, is_settle, remark, handler, create_time, 
    update_time, create_per, update_per
  </sql>
  
  <select id="selPaymentBad" parameterType="map" resultType="map">
  	select id, payment_id, loan_id, left(pay_time,10) pay_time, bad_debt_status, is_settle, remark, handler, create_time, 
    update_time, create_per, update_per from t_payment_bad where loan_id=#{loanId} limit #{page} , #{pageSize}
  </select>
  
  <select id="countPaymentBad" resultType="java.lang.Integer" parameterType="map">
  	select count(*) from t_payment_bad where loan_id=#{loanId}
  </select>
  
  <select id="selPaymentBadAll" parameterType="map" resultType="map">
  	select * from t_payment_bad b LEFT JOIN t_loan l ON b.loan_id=l.id LEFT JOIN t_loan_offer o ON l.id=o.load_id 
  	LEFT JOIN t_loan_plan p ON l.id=p.loan_id GROUP BY l.id limit #{page} , #{pageSize}
  </select>
  
  <select id="countPaymentBadAll" parameterType="map" resultType="java.lang.Integer">
  	select count(*) from (select count(*) from t_payment_bad b LEFT JOIN t_loan l ON b.loan_id=l.id LEFT JOIN t_loan_offer o ON l.id=o.load_id 
  	LEFT JOIN t_loan_plan p ON l.id=p.loan_id GROUP BY l.id) a
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_payment_bad
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_payment_bad
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.trad.bean.PaymentBad" >
    insert into t_payment_bad (id, payment_id, loan_id, pay_time, 
      bad_debt_status, is_settle, remark, 
      handler, create_time, update_time, 
      create_per, update_per)
    values (#{id,jdbcType=VARCHAR}, #{paymentId,jdbcType=VARCHAR}, #{loanId,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{badDebtStatus,jdbcType=CHAR}, #{isSettle,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, 
      #{handler,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createPer,jdbcType=VARCHAR}, #{updatePer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.trad.bean.PaymentBad" >
    insert into t_payment_bad
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="badDebtStatus != null" >
        bad_debt_status,
      </if>
      <if test="isSettle != null" >
        is_settle,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="handler != null" >
        handler,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createPer != null" >
        create_per,
      </if>
      <if test="updatePer != null" >
        update_per,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badDebtStatus != null" >
        #{badDebtStatus,jdbcType=CHAR},
      </if>
      <if test="isSettle != null" >
        #{isSettle,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="handler != null" >
        #{handler,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPer != null" >
        #{createPer,jdbcType=VARCHAR},
      </if>
      <if test="updatePer != null" >
        #{updatePer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trad.bean.PaymentBad" >
    update t_payment_bad
    <set >
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="badDebtStatus != null" >
        bad_debt_status = #{badDebtStatus,jdbcType=CHAR},
      </if>
      <if test="isSettle != null" >
        is_settle = #{isSettle,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="handler != null" >
        handler = #{handler,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPer != null" >
        create_per = #{createPer,jdbcType=VARCHAR},
      </if>
      <if test="updatePer != null" >
        update_per = #{updatePer,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trad.bean.PaymentBad" >
    update t_payment_bad
    set payment_id = #{paymentId,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      bad_debt_status = #{badDebtStatus,jdbcType=CHAR},
      is_settle = #{isSettle,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      handler = #{handler,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_per = #{createPer,jdbcType=VARCHAR},
      update_per = #{updatePer,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>